//******************************************************************************
//*   © Copyright 2003.  The U.S. Government, as Represented by the Administrator
//*     of the National Aeronautics and Space Administration (NASA).
//*   © Copyright 2008 - 2013.     The Ohio Aerospace Institute, on behalf of the NPSS(TM)
//*     Consortium.  All rights reserved.  Includes content licensed from the 
//*     U.S. Government, National Aeronautics and Space Administration under 
//*     United States Copyright Registration Numbers  V3503D364 and V3482D344.
//*******************************************************************************

//******************************************************************************
//*  NPSSTM software and related documentation is export controlled
//*  with an Export Control Classification Number(ECCN) of 9D991, controlled for
//*  Anti-Terrorism reasons, under U.S. Export Administration Regulations 15 CFR
//*  730-774. It may not be transferred to a country checked under anti-terrorism
//*  on the Commerce Country Chart structure or to foreign nationals of those
//*  countries in the U.S. or abroad without first obtaining a license from the
//*  Bureau of Industry and Security, United States Department of Commerce. 
//*  Violations are punishable by fine, imprisonment, or both.
//*******************************************************************************

// ******************************************************************
// This data Map is generated from an existing NEPP map.
// ******************************************************************

//  ---------------------------------------------------------------
//  |    Fan outer diameter Compressor Maps
//  ---------------------------------------------------------------
//  |    Declaration of a new Subelement instance called S_map
//  |    that is of the type CompressorRlineMap
//  ---------------------------------------------------------------

Subelement CompressorRlineMap S_map {

	// Do NOT change these values!  They are specific to these maps.
	alphaMapDes = 0.0; // Unscaled map design point vane angle.
	NcMapDes = 1.0; // Unscaled map design point corrected speed. Max eff point at 100% speed	
	RlineMapDes = 2.0; // Unscaled map design point Rline. Max eff point at 100% speed
	RlineStall= 1.0; // Rline at stall
	
	//  ----------------------------------------------------------------------
	//  |    Declare a table (or function) named TB_Wc(real ALPHA, real SPED, real R)
	//  |    To satisfy the TB_Wc socket requirement.
	//  ---------------------------------------------------------------------- 

	// Fan OD corrected flow VS. stator angle, fraction of design speed, and R-line
	// Note: this map has ALPHA = 0 and ALPHA = 1, but both submaps are identical
    Table TB_Wc(real ALPHA, real SPED, real R) {
		 
		 ALPHA = 0.0 {
			SPED = 0.4 {
				R = { 1.0, 1.25, 1.5, 1.75, 2.0 }
				FLOW = { 386.838, 552.308, 670.769, 762.906, 830.598 }
			}
			SPED = 0.5 {
				R = { 1.0, 1.25, 1.5, 1.75, 2.0 }
				FLOW = { 544.786, 659.487, 766.667, 855.043, 918.974 }
			}
			SPED = 0.6 {
				R = { 1.0, 1.25, 1.5, 1.75, 2.0 }
				FLOW = { 693.333, 781.709, 881.368, 956.581, 1018.632 }
			}
			SPED = 0.7 {
				R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
				FLOW = { 830.598, 911.453, 996.068, 1060.0, 1114.53, 1152.137, 1182.222 }
			}
			SPED = 0.8 {
				R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
				FLOW = { 965.983, 1037.436, 1116.41, 1165.299, 1221.709, 1249.915, 1263.077 }
			}
			SPED = 0.85 {
				R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
				FLOW = { 1037.436, 1108.889, 1184.103, 1227.35, 1280.0, 1304.444, 1313.846 }
			}
			SPED = 0.9 {
				R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
				FLOW = { 1120.171, 1191.624, 1259.316, 1300.684, 1343.932, 1364.615, 1370.256 }
			}
			SPED = 0.95 {
				R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
				FLOW = { 1214.188, 1280.0, 1332.65, 1368.376, 1394.701, 1402.222, 1403.342 }
			}
			SPED = 1.0 {
				R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
				FLOW = { 1327.009, 1374.017, 1404.103, 1428.547, 1441.709, 1449.231, 1451.111 }
			}
			SPED = 1.05 {
				R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
				FLOW = { 1358.974, 1405.983, 1436.068, 1460.513, 1468.034, 1469.915, 1471.795 }
			}
		} // end ALPHA = 0.0

		ALPHA = 1.0 {
			SPED = 0.4 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0 }
			  FLOW = { 386.838, 552.308, 670.769, 762.906, 830.598 }
			}
			SPED = 0.5 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0 }
			  FLOW = { 544.786, 659.487, 766.667, 855.043, 918.974 }
			}
			SPED = 0.6 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0 }
			  FLOW = { 693.333, 781.709, 881.368, 956.581, 1018.632 }
			}
			SPED = 0.7 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  FLOW = { 830.598, 911.453, 996.068, 1060.0, 1114.53, 1152.137, 1182.222 }
			}
			SPED = 0.8 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  FLOW = { 965.983, 1037.436, 1116.41, 1165.299, 1221.709, 1249.915, 1263.077 }
			}
			SPED = 0.85 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  FLOW = { 1037.436, 1108.889, 1184.103, 1227.35, 1280.0, 1304.444, 1313.846 }
			}
			SPED = 0.9 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  FLOW = { 1120.171, 1191.624, 1259.316, 1300.684, 1343.932, 1364.615, 1370.256 }
			}
			SPED = 0.95 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  FLOW = { 1214.188, 1280.0, 1332.65, 1368.376, 1394.701, 1402.222, 1403.342 }
			}
			SPED = 1.0 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  FLOW = { 1327.009, 1374.017, 1404.103, 1428.547, 1441.709, 1449.231, 1451.111 }
			}
			SPED = 1.05 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  FLOW = { 1358.974, 1405.983, 1436.068, 1460.513, 1468.034, 1469.915, 1471.795 }
			}
		} // end ALPHA = 1.0

		ALPHA.interp = "linear" ;
		ALPHA.extrap = "linear" ;

		SPED.interp = "lagrange3" ;
		SPED.extrap = "linear" ;

		R.interp = "lagrange3" ;
		R.extrap = "linear" ;

		extrapIsError = 0;
		printExtrap = 0;
		
    }  //end TB_Wc

	//  ----------------------------------------------------------------------
	//  |    Declare a table (or function) named TB_eff(real ALPHA, real SPED, real R)
	//  |    To satisfy the TB_eff socket requirement.
	//  ---------------------------------------------------------------------- 

	// Fan OD efficiency VS. vane angle, fraction of design speed, and R-line  
	// Note: this map has ALPHA = 0 and ALPHA = 1, but both submaps are identical
    Table TB_eff(real ALPHA, real SPED, real R) {
		ALPHA = 0.0 {
			SPED = 0.4 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0 }
			  EFF = { 0.6982, 0.8757, 0.8322, 0.4826, 0.1873 }
			}
			SPED = 0.5 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0 }
			  EFF = { 0.7344, 0.8522, 0.8902, 0.7906, 0.6583 }
			}
			SPED = 0.6 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0 }
			  EFF = { 0.7743, 0.8467, 0.8975, 0.8703, 0.7562 }
			}
			SPED = 0.7 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  EFF = { 0.7797, 0.8449, 0.8848, 0.8938, 0.8377, 0.6837, 0.4609 }
			}
			SPED = 0.8 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  EFF = { 0.7797, 0.8304, 0.8739, 0.8902, 0.8848, 0.7417, 0.6402 }
			}
			SPED = 0.85 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  EFF = { 0.7797, 0.8322, 0.8721, 0.8884, 0.8902, 0.787, 0.6638 }
			}
			SPED = 0.9 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  EFF = { 0.787, 0.8322, 0.8721, 0.8902, 0.8975, 0.8377, 0.6647 }
			}
			SPED = 0.95 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  EFF = { 0.7924, 0.8377, 0.8685, 0.8884, 0.892, 0.8848, 0.8812 }
			}
			SPED = 1.0 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  EFF = { 0.8268, 0.8576, 0.8721, 0.8775, 0.8703, 0.8649, 0.863 }
			}
			SPED = 1.05 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  EFF = { 0.8069, 0.8286, 0.8413, 0.8377, 0.8268, 0.825, 0.8214 }
			}
		} // end ALPHA = 0.0

		ALPHA = 1.0 {
			SPED = 0.4 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0 }
			  EFF = { 0.6982, 0.8757, 0.8322, 0.4826, 0.1873 }
			}
			SPED = 0.5 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0 }
			  EFF = { 0.7344, 0.8522, 0.8902, 0.7906, 0.6583 }
			}
			SPED = 0.6 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0 }
			  EFF = { 0.7743, 0.8467, 0.8975, 0.8703, 0.7562 }
			}
			SPED = 0.7 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  EFF = { 0.7797, 0.8449, 0.8848, 0.8938, 0.8377, 0.6837, 0.4609 }
			}
			SPED = 0.8 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  EFF = { 0.7797, 0.8304, 0.8739, 0.8902, 0.8848, 0.7417, 0.6402 }
			}
			SPED = 0.85 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  EFF = { 0.7797, 0.8322, 0.8721, 0.8884, 0.8902, 0.787, 0.6638 }
			}
			SPED = 0.9 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  EFF = { 0.787, 0.8322, 0.8721, 0.8902, 0.8975, 0.8377, 0.6647 }
			}
			SPED = 0.95 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  EFF = { 0.7924, 0.8377, 0.8685, 0.8884, 0.892, 0.8848, 0.8812 }
			}
			SPED = 1.0 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  EFF = { 0.8268, 0.8576, 0.8721, 0.8775, 0.8703, 0.8649, 0.863 }
			}
			SPED = 1.05 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  EFF = { 0.8069, 0.8286, 0.8413, 0.8377, 0.8268, 0.825, 0.8214 }
			}
		} // end ALPHA = 1.0

		ALPHA.interp = "linear" ;
		ALPHA.extrap = "linear" ;

		SPED.interp = "lagrange3" ;
		SPED.extrap = "linear" ;

		R.interp = "lagrange3" ;
		R.extrap = "linear" ;

		extrapIsError = 0;
		printExtrap = 0;
		
    }  //end TB_eff
	
	//  ----------------------------------------------------------------------
	//  |    Declare a table (or function) named TB_PR(real ALPHA, real SPED, real R)
	//  |    To satisfy the TB_PR socket requirement.
	//  ---------------------------------------------------------------------- 

	// Fan OD total-to-total pressure ratio VS. vane angle, fraction of design speed, and R-line 
	// Note: this map has ALPHA = 0 and ALPHA = 1, but both submaps are identical	
    Table TB_PR(real ALPHA, real SPED, real R) {
	
		ALPHA = 0.{
			SPED = 0.4 {
				R = { 1.0, 1.25, 1.5, 1.75, 2.0 }
				PR = { 1.091, 1.084, 1.06, 1.005, 0.9419 }
			}
			SPED = 0.5 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0 }
			  PR = { 1.147, 1.142, 1.121, 1.079, 1.019 }
			}
			SPED = 0.6 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0 }
			  PR = { 1.212, 1.212, 1.193, 1.16, 1.114 }
			}
			SPED = 0.7 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  PR = { 1.302, 1.298, 1.284, 1.267, 1.221, 1.153, 1.065 }
			}
			SPED = 0.8 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  PR = { 1.402, 1.414, 1.405, 1.388, 1.351, 1.288, 1.177 }
			}
			SPED = 0.85 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  PR = { 1.467, 1.486, 1.481, 1.465, 1.428, 1.377, 1.263 }
			}
			SPED = 0.9 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  PR = { 1.553, 1.567, 1.565, 1.551, 1.521, 1.465, 1.34 }
			}
			SPED = 0.95 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  PR = { 1.647, 1.663, 1.658, 1.64, 1.602, 1.519, 1.388 }
			}
			SPED = 1.0 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  PR = { 1.765, 1.763, 1.747, 1.716, 1.677, 1.593, 1.467 }
			}
			SPED = 1.05 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  PR = { 1.8, 1.795, 1.781, 1.753, 1.702, 1.626, 1.498 }
			}
		} // end ALPHA = 0.0

		ALPHA = 1.0 {
			SPED = 0.4 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0 }
			  PR = { 1.091, 1.084, 1.06, 1.005, 0.9419 }
			}
			SPED = 0.5 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0 }
			  PR = { 1.147, 1.142, 1.121, 1.079, 1.019 }
			}
			SPED = 0.6 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0 }
			  PR = { 1.212, 1.212, 1.193, 1.16, 1.114 }
			}
			SPED = 0.7 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  PR = { 1.302, 1.298, 1.284, 1.267, 1.221, 1.153, 1.065 }
			}
			SPED = 0.8 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  PR = { 1.402, 1.414, 1.405, 1.388, 1.351, 1.288, 1.177 }
			}
			SPED = 0.85 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  PR = { 1.467, 1.486, 1.481, 1.465, 1.428, 1.377, 1.263 }
			}
			SPED = 0.9 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  PR = { 1.553, 1.567, 1.565, 1.551, 1.521, 1.465, 1.34 }
			}
			SPED = 0.95 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  PR = { 1.647, 1.663, 1.658, 1.64, 1.602, 1.519, 1.388 }
			}
			SPED = 1.0 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  PR = { 1.765, 1.763, 1.747, 1.716, 1.677, 1.593, 1.467 }
			}
			SPED = 1.05 {
			  R = { 1.0, 1.25, 1.5, 1.75, 2.0, 2.25, 2.5 }
			  PR = { 1.8, 1.795, 1.781, 1.753, 1.702, 1.626, 1.498 }
			}
		} // end ALPHA = 1.0

		ALPHA.interp = "linear" ;
		ALPHA.extrap = "linear" ;

		SPED.interp = "lagrange3" ;
		SPED.extrap = "linear" ;

		R.interp = "lagrange3" ;
		R.extrap = "linear" ;

		extrapIsError = 0;
		printExtrap = 0;
	  
    }  //end TB_PR
	
}  //end S_map scope (CompressorRlineMap subelement)
