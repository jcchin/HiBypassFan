// This is a Simulink-NPSS config file that specifies the command options
// that will be passed to NPSS, and also the input/output ports from/to Simulink

timeStep = 0.05;

// This is the list of 'command line' type args that will be passed to the 
// NPSS CommandInterface when it is initialized.  One of these args should
// be the name of the actual NPSS model input file.
//commandLine = "\"-I$NPSS_TOP\\ExampleModels\\Simulink\" \"-I$NPSS_TOP\\FrontEnds\\S_Function\\Examples\\v2010b\\sampleFJ\" sampleFJ.run";
commandLine = "\"-I Z:\Documents\2015\RHC\HiBypassFan\" fanjet.run";

// Specify the list of continuous states to be directly manipulated 
// by Simulink here.  These must be NPSS variable names.
// NOTE: if your NPSS model has its own internal integrators it will be 
// treated as a discrete model, so do NOT export any continuous states or
// derivatives to Simulink.
//states = { "foo", "bar" };

// Specify initial values for the states here (size must match size of 'states')
//initialValues = { 0.0, 0.0 };

// Specify names of derivative expressions here.
//(size must equal size of 'states' array)
//derivatives = { "fooprime", "barprime" };


// Now set up the ports we'll use to interface with Simulink. 
// We can create any number of these...

SimulinkInPortMapper inPort0 {
   
   // specifying 3 names here will create a SimulinkInPortMapper with
   // an input vector of size 3. When the Sfunction runs, it will take
   // the values from the input vector of each input port and map them
   // into the NPSS variables corresponding to the given names.
   vars = { "BrnPri.Wfuel" }
}


SimulinkOutPortMapper outPort0 {
   // specifying 3 names here will create a SimulinkOutPortMapper with
   // an output vector of size 3. When the Sfunction runs, it will take
   // the values from the NPSS variables corresponding to the given names
   // and map them into the output vector.
   vars = { "TrbH.Fl_I.Tt", "TrbH.Fl_I.Pt", "TrbH.Fl_I.W" }
}

SimulinkOutPortMapper outPort1 {
   vars = { "TrbH.Fl_I.Tt", "TrbH.Fl_I.Pt" }
}
