//******************************************************************************
//*   © Copyright 2003.  The U.S. Government, as Represented by the Administrator
//*     of the National Aeronautics and Space Administration (NASA).
//*   © Copyright 2008 - 2013.     The Ohio Aerospace Institute, on behalf of the NPSS(TM)
//*     Consortium.  All rights reserved.  Includes content licensed from the 
//*     U.S. Government, National Aeronautics and Space Administration under 
//*     United States Copyright Registration Numbers  V3503D364 and V3482D344.
//*******************************************************************************

//******************************************************************************
//*  NPSSTM software and related documentation is export controlled
//*  with an Export Control Classification Number(ECCN) of 9D991, controlled for
//*  Anti-Terrorism reasons, under U.S. Export Administration Regulations 15 CFR
//*  730-774. It may not be transferred to a country checked under anti-terrorism
//*  on the Commerce Country Chart structure or to foreign nationals of those
//*  countries in the U.S. or abroad without first obtaining a license from the
//*  Bureau of Industry and Security, United States Department of Commerce. 
//*  Violations are punishable by fine, imprisonment, or both.
//*******************************************************************************


//file: ncp.view
//4-13-99  added HPX to Shaft output

class TitleBlock extends SimpleBlock {
  body = "*******************************************************************************\n" +
         "NCP ????????????????????????????    model:???????????????     run by:?????????????    solutionMode=?????????????    converge=?????    case:?????\n" +
         "time:???.???    timeStep:?.????     therm_package:??????      Mode:??????????         iter/pas/Jac/Broy=???/???/??/??     run: ???????? ????????" ;
  vars = {"VERSION","MODELNAME","USER","solver.solutionMode","solver.converged", "CASE", 
           "time","timeStep","THERMPACKAGE","switchDes","solver.iterationCounter","solver.passCounter","solver.numJacobians","solver.numBroydens","date","timeOfDay"}
//           "time","timeStep","THERMPACKAGE","Mode","solver.iterationCounter","solver.passCounter","solver.numJacobians","solver.numBroydens","date","timeOfDay"}
}
 
//issue: need to input path of input file here (will be long)
//issue: should have the ability to transfer up to 2 lines of user defined title

class SummaryBlock extends SimpleBlock {
  body = "                        Summary Output Data \n" +
         "    MN       alt    dTs        W        Fg        Fn     TSFC      Wfuel      WAR      OPR\n" +

         " ?.???   ?????.?   ???.??   ????.?   ?????.?   ?????.?   ?.????   ?????.??  ??.????   ??.???";
  vars = {"PERF.MN","PERF.alt","PERF.dTs","PERF.W",
          "PERF.Fg","PERF.Fn","PERF.TSFC","PERF.WfuelHour","PERF.WAR","PERF.OPR"}
}
//issue: include calc for OPR, EPR, FPR, CDT, CET, RIT in EngPerf.cmp
//issue: this summary block could be used for default interactive display after each case (preceed with Case #)(allow user to append variables)
     
//
// Define the PageViewer "ncpView".

OutFileStream pvStream {
  filename = "viewOut";
}

DataViewer PageViewer ncpView {

  GroupBlock TnBGroup {
    TitleBlock title;
    SummaryBlock summary;
    title.bottom = "summary";
    anchor = "title";   // Defaults to first declared block.
    addGutter = TRUE;
  }

  LinkColTBlock inputs {
    titleBody = "          INPUT FLOW";
    titleVars = { }
    compType = "FluidInputPort";
    compTypeFormat = "?????????????????";
    excludeCompTypes = { "BleedInPort" }     //remove to include bleed ports 
    compAttr = {"W:????.??","Pt:????.???","Tt:?????.??","ht:????.??",
      "FAR:?.????","Wc:????.??","Ps:????.???","Ts:?????.??","Aphy:?????.?",
      "MN:?.????","gamt:??.?????"}
  }
  anchor = "TnBGroup";      // Defaults to first declared block.
//issue: add station identifier after component string and again at RH end of row
//issue: Input Flow - split into 2 blocks to ease interactive display (maybe 3 blocks, 1st contains element,station)
//issue: remove element extensions 
  GroupBlock Ablock {
    DColTBlock inlets {
      titleBody = "          INLETS";
      compType = "Inlet";
      compTypeFormat = "??????????";
      compAttr = {"eRam:?.????","Afs:????.??","Fram:?????.?"}
  //issue: should have del_T here in Inlet (?) which requires moving flight cond
    }
  
    DColTBlock ducts {
      titleBody = "            DUCTS";
      compType = "Duct";
      compTypeFormat = "??????????";
      compAttr = {"dPqP:??.?????","Fl_I.MN:?.????=MNin","Fl_I.Aphy:????.??=Aphy"}
    }

    DColTBlock nasaducts {
      titleBody = "            DUCTS";
      compType = "nasaDuct";
      compTypeFormat = "??????????";
      compAttr = {"dPqP:??.?????","Fl_I.MN:?.????=MNin","Fl_I.Aphy:????.??=Aphy"}
    }
  
    DColTBlock splitters {
      titleBody = "          SPLITTERS";
      compType = "Splitter";
      compTypeFormat = "??????????";
      compAttr = {"BPR:??.?????","dPqP1:?.????=dP/P1",
                  "dPqP2:?.????=dP/P2"}
    }

    DColTBlock nasasplitters {
      titleBody = "          SPLITTERS";
      compType = "nasaSplitter";
      compTypeFormat = "??????????";
      compAttr = {"BPR:??.?????","dPqP1:?.????=dP/P1",
                  "dPqP2:?.????=dP/P2"}
    }
//issue: don't insert newline when section skipped because there is no data
  
    DColTBlock mixers {
      titleBody = "          MIXERS";
      compType = "Mixer";
      compTypeFormat = "??????????";
      compAttr = {"Aout:????.??","nStations:??"}
    }
  
    DColTBlock burners {
      titleBody = "          BURNERS";
      compType = "Burner";
      compTypeFormat = "???????????";
      compAttr = {"TtCombOut:?????.??=TtOut","eff:??.????","dPqP:??.????",
        "Fl_O.LHV:??????=LHV","Wfuel:???.?????","FAR:??.?????"}
    }

    DColTBlock nasaburners {
      titleBody = "          BURNERS";
      compType = "nasaBurner";
      compTypeFormat = "???????????";
      compAttr = {"TtCombOut:?????.??=TtOut","eff:??.????","dPqP:??.????",
        "Fl_O.LHV:??????=LHV","Wfuel:???.?????","FAR:??.?????"}
    }

//issue: need method to convert wf units
  
    DColTBlock nasanozzles {
      titleBody = "          NOZZLES";
      compType = "nasaNozzle";
      compTypeFormat = "?????????";
      compAttr = {"PR:??.???","Cfg:?.????","CdTh:?.????","Cv:?.????",
        "Ath:????.??","Vactual:?????.?","Fg:?????.?"}
    }

    DColTBlock nozzles {
      titleBody = "          NOZZLES";
      compType = "Nozzle";
      compTypeFormat = "?????????";
      compAttr = {"PR:??.???","Cfg:?.????","CdTh:?.????","Cv:?.????",
        "Ath:????.??","Vactual:?????.?","Fg:?????.?"}
    }
  //issue: provide option to override default 2 column space between adjoing var names and values
  //issue: only CDNozzle types listed in Noz section; want to include all types (should only be 1 nozzle element w subelements for types)

    DColTBlock shafts {
      titleBody = "          SHAFTS";
      compType = "Shaft";
      compTypeFormat = "????????";
//      compAttr = {"Nmech:?????.?","trqIn:?????.?","trqNet:???.????","pwrIn:?????.?","dNqdt:????.??"}
      compAttr = {"Nmech:?????.?","trqIn:?????.?","trqNet:???.????","pwrIn:?????.?","HPX:???.??","dNqdt:????.??"}
//      compAttr = {"Nmech:?????.?","trqIn:?????.?","trqNet:???.????","pwrIn:?????.?","eff:?.????","HPX:???.??","dNqdt:????.??"}
    }

    GroupBlock inertiaGroup {
      DColTBlock shaftI {
        titleBody = "          INERTIA";
        compType = "Shaft";
        compTypeFormat = "????????";
        compAttr = {"inertia:????.??","inertiaSum:?????.??"}
      }

      DColTBlock compI {
        compType = "Compressor";
        compTypeFormat = "????????";
        compAttr = {"Sh_O.inertia:????.??"}
        showColHeader=FALSE;
      }
      shaftI.bottom = "compI";
      addGutter = FALSE;
    
      DColTBlock turbI {
        compType = "Turbine";
        compTypeFormat = "????????";
        compAttr = {"Sh_O.inertia:????.??"}
        showColHeader=FALSE;
      }
      compI.bottom = "turbI";
      addGutter = FALSE;
    
      DColTBlock loadI {
        compType = "Load";
        compTypeFormat = "????????";
        compAttr = {"inertia:????.??"}
        showColHeader=FALSE;
      }
      turbI.bottom = "loadI";
      addGutter = FALSE;
    }  //end of inertiaGroup block

    DColTBlock loads {
      titleBody = "          LOADS";
      compType = "Load";
      compTypeFormat = "??????????";
      compAttr = {"Nload:?????","NR:??.?????","trqLoad:?????.?","pwr:?????"}
    }

    inlets.bottom = "ducts";
    ducts.bottom = "nasaducts";
    nasaducts.bottom = "splitters";
    splitters.bottom = "nasasplitters";
    nasasplitters.bottom = "mixers";
    mixers.bottom  = "burners";
    burners.bottom = "nasaburners";
    nasaburners.bottom = "nozzles";
    nozzles.bottom = "nasanozzles";
    nasanozzles.bottom = "shafts";
    shafts.bottom = "inertiaGroup";
    inertiaGroup.bottom = "loads";
  
  }   //end of Ablock block


  EmptyTextBlock colspace {
    width = 0;         //use 0 to cause all cases to be width = 4 (see issues)
    height = 0;  // Height is usually irrelavent.  A 0-height block still has a width.
  }

//issue: need to fix EmptyTextBlock; the input width does not translate correctly to output
//issue: EmptyTextBlock: fist case is input width+4 for 1st case; remaining cases = 4


  GroupBlock Bblock {
    GroupBlock CTgroup {
      DColTBlock comps {
        titleBody = "          COMPRESSORS & TURBINES";
        compType = "Compressor";
        compTypeFormat = "??????????";
        compAttr = {"Fl_I.Wc:????.??=Wc","PR:??.???","TR:??.????",
          "effPoly:??.????=efPoly","eff:??.????","Nc:?????.?","pwr:??????.?"}
      }
    
      DColTBlock turbs {
        compType = "Turbine";
        compTypeFormat = "??????????";
        compAttr = {"Fl_I.Wc:????.??=Wc","PR:??.???","TR:??.????",
          "effPoly:??.????=efPoly","eff:??.????","Np:?????.?","pwrExpand:??????.?"}
        showColHeader=FALSE;
      }
      comps.bottom = "turbs";
      addGutter = FALSE;
    }  //end of CTgroup block
  
    GroupBlock MapsGroup {
      DColTBlock compMaps {
        titleBody = "          MAP POINTS - COMPRESSORS & TURBINES";
        compType = "Compressor";
        compTypeFormat = "??????????";
        compAttr = {"S_map.WcMap:????.??=WcMap","S_map.PRmap:??.???=PRmap",
          "S_map.effMap:????????????????????.????=effMap","S_map.NcMap:?????.?=NcMap",
          "S_map.RlineMap:??.????=R/parm"}
      }
    
      DColTBlock turbMaps {
        compType = "Turbine";
        compTypeFormat = "??????????";
        compAttr = {"S_map.WpMap:????.??=WpMap","S_map.PRmap:??.???=PRmap",
          "S_map.effMap:????????????????????.????=effMap","S_map.NpMap:?????.?=NpMap",
          "S_map.parmGeomMap:??.????=parmMap"}
        showColHeader=FALSE;
      }
      compMaps.bottom = "turbMaps";
      addGutter = FALSE;
    }  //end of MapsGroup
//issue: need branching for different types of subelement maps

    GroupBlock ScaleGroup {
      DColTBlock compScale {
        titleBody = "          ADDERS AND SCALARS";
        compType = "Compressor";
        compTypeFormat = "????????";
        compAttr = {"s_WcAud:?.????","a_WcAud:?.????",
          "s_effAud:?.????","a_effAud:?.????"}
      }
    
      DColTBlock turbScale {
        compType = "Turbine";
        compTypeFormat = "????????";
        compAttr = {"s_WpAud:?.????","a_WpAud:?.????",
          "s_PRaud:?.????","a_PRaud:?.????",
          "s_effAud:?.????","a_effAud:?.????"}
        showColHeader=FALSE;
      }
      compScale.bottom = "turbScale";
      addGutter = FALSE;
    }  //end of ScaleGroup


      LinkColTBlock bleeds {
        titleBody = "          BLEEDS";
        compType = "InterStageBleedOutPort";
        compTypeFormat = "????????????????????????";
//issue: need to shorten format and just print port names
        compAttr = {"fracBldW:??.????=Wb/Win","fracBldWork:??.????=dhb/dh","fracBldP:??.????=dPb/dP",
          "Tt:??????.??","ht:?????.??"}
      }
//issue: need code that tests all ports to extract bld data (use isA() )

    CTgroup.bottom = "MapsGroup";
    MapsGroup.bottom = "ScaleGroup";
      ScaleGroup.bottom = "bleeds";

  }  //end of Bblock


  TnBGroup.bottom = "inputs";
  inputs.bottom = "Ablock";
  Ablock.right = "colspace";   // this is where i've tried to add space between Ablock
  colspace.right = "Bblock";   // and Bblock (when they sit side by side

  pageWidth = 0;
  pageHeight = 0;

  outStreamHandle = "pvStream";

}

cout << " \n";

//ncpView.display();
